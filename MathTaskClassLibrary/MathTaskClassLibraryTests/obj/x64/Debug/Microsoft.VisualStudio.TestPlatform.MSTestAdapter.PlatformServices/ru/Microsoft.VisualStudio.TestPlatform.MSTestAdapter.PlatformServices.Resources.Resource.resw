<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DeploymentItem" xml:space="preserve">
    <value>элемент развертывания "{0}"</value>
  </data>
  <data name="Common_CannotBeNullOrEmpty" xml:space="preserve">
    <value>Этот параметр не должен быть пустым или иметь значение NULL.</value>
  </data>
  <data name="UTA_ErrorDataConnectionFailed" xml:space="preserve">
    <value>Адаптеру модульных тестов не удалось подключиться к источнику данных, чтобы считать данные. Дополнительные сведения об устранении этой ошибки см. в разделе "Устранение неполадок в модульных тестах на основе данных" (http://go.microsoft.com/fwlink/?LinkId=62412) в библиотеке MSDN. Подробности об ошибке: {0}</value>
  </data>
  <data name="InvalidSettingsXmlElement" xml:space="preserve">
    <value>MSTestAdapter обнаружил непредвиденный элемент "{0}" в параметрах "{1}". Удалите этот элемент и повторите попытку.</value>
  </data>
  <data name="MissingDeploymentDependencyWithoutReason" xml:space="preserve">
    <value>Ошибка развертывания тестового запуска: не удалось найти сборку или модуль "{0}".</value>
  </data>
  <data name="DeploymentItemContainsInvalidCharacters" xml:space="preserve">
    <value>Недопустимый элемент развертывания: указанный путь "{0}" или выходной каталог "{1}" содержат недопустимые символы.</value>
  </data>
  <data name="MissingDeploymentDependency" xml:space="preserve">
    <value>Ошибка развертывания тестового запуска: не удалось найти сборку или модуль "{0}". Причина: {1}</value>
  </data>
  <data name="DeploymentErrorBadDeploymentItem" xml:space="preserve">
    <value>Ошибка развертывания при тестовом запуске: недопустимый элемент развертывания "{0}". В выходном каталоге "{1}" указано, что развертывание этого элемента должно быть выполнено не в корневом каталоге развертывания, что запрещено.</value>
  </data>
  <data name="DeploymentItemOutputDirectoryCannotBeNull" xml:space="preserve">
    <value>Недопустимый элемент развертывания: выходной каталог не может быть NULL.</value>
  </data>
  <data name="UTA_DataSourceConfigurationSectionMissing" xml:space="preserve">
    <value>Не удалось найти источник данных "{0}" в параметрах конфигурации теста</value>
  </data>
  <data name="DeploymentErrorGettingSatellite" xml:space="preserve">
    <value>Ошибка развертывания тестового запуска: произошла ошибка при получении вспомогательных сборок для {0}: {1}: {2}</value>
  </data>
  <data name="DeploymentErrorFailedToDeployDependencies" xml:space="preserve">
    <value>Ошибка развертывания тестового запуска: не удалось развернуть зависимости для тестового хранилища "{0}": {1}</value>
  </data>
  <data name="DeploymentErrorFailedToAccessFile" xml:space="preserve">
    <value>Ошибка развертывания тестового запуска: не удалось получить доступ к файлу "{0}": {1}: {2}</value>
  </data>
  <data name="TestRunName" xml:space="preserve">
    <value>{0}_{1} {2}</value>
  </data>
  <data name="DeploymentItemWithOutputDirectory" xml:space="preserve">
    <value>элемент развертывания "{0}" (выходной каталог "{1}")</value>
  </data>
  <data name="DeploymentErrorFailedToGetFileForDeploymentItem" xml:space="preserve">
    <value>Ошибка развертывания тестового запуска: не удалось получить файл для {0}: {1}: {2}</value>
  </data>
  <data name="DeploymentErrorFailedToAccesOutputDirectory" xml:space="preserve">
    <value>Ошибка развертывания тестового запуска: не удалось получить доступ к выходному каталогу "{1}", указанному элементом развертывания "{0}"; элемент не будет развернут: {2}: {3}</value>
  </data>
  <data name="DeploymentErrorFailedToCopyWithOverwrite" xml:space="preserve">
    <value>Ошибка развертывания тестового запуска: не удалось скопировать файл "{0}" в "{1}": {2}: {3}</value>
  </data>
  <data name="WrongNumberOfObjects" xml:space="preserve">
    <value>Неправильное число объектов для перестановки. Оно должно быть больше нуля.</value>
  </data>
  <data name="CannotFindFile" xml:space="preserve">
    <value>Не удалось найти файл "{0}".</value>
  </data>
  <data name="DeploymentItemPathCannotBeNullOrEmpty" xml:space="preserve">
    <value>Недопустимый элемент развертывания: путь должен содержать по меньшей мере один символ.</value>
  </data>
  <data name="DeploymentItemOutputDirectoryMustBeRelative" xml:space="preserve">
    <value>Недопустимый элемент развертывания: указанный выходной каталог "{0}" не является относительным.</value>
  </data>
</root>